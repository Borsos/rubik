#!/bin/bash

TEMPROOT="$PWD/tmp_test_cubist.$$"
TEMPDIR=""
CUBIST_OPTIONS=""
while [[ ${#@} -ne 0 ]] ; do
    option="$1"
    shift 1
    case "$option" in
        --tmpdir|-t)
            TEMPDIR="$1"
            shift 1
            ;;
        --pass)
            CUBIST_OPTIONS="${CUBIST_OPTIONS}'$1' "
            shift 1
            ;;
        --help|-h)
            print_help
            ;;
        *)
            CUBIST_OPTIONS="${CUBIST_OPTIONS}'$option' "
            echo "WRN: passing option '$option' to cubist"
            #exit 1
            ;;
    esac
done

if [[ "$TEMPDIR" == "" ]] ; then
    unset TEMPDIR
    while [[ -d ${TEMPDIR:=${TEMPROOT}.$RANDOM} ]] ; do
        unset TEMPDIR
    done
fi

function prex {
    typeset    _command="$1"
    typeset -i _returncode
    echo ">>> $_command ..." 1>&2
    eval "$_command" ; _returncode=$?
    echo "<<< $_command [${_returncode}]" 1>&2
    return $_returncode
}

function die {
    typeset    _message="$1"
    typeset -i _exitcode=${2:-1}
    echo "ERR: $_message [exiting ${_exitcode}]" 1>&2
    exit $_exitcode
}

function check_file_exists {
    typeset _filename="$1"
    if [[ -f "$_filename" ]] ; then
        echo ".... OK, $_filename exists"
    else
        die "file $_filename does not exists"
    fi
}

function check_file_has_size {
    typeset _filename="$1"
    typeset _filesize="$2"
    typeset _statsize=$(stat --printf %s "$_filename")
    if [[ $_filesize -eq $_statsize ]] ; then
        echo ".... OK, $_filename has size ${_filesize}"
    else
        die "file $_filename has size ${_statsize} != expected size ${_filesize}"
    fi
}

function check_file_exists_and_has_size {
    typeset _filename="$1"
    typeset _filesize="$2"
    check_file_exists "$_filename"
    check_file_has_size "$_filename" "$_filesize"
}

function check_files_are_equal {
    typeset _filename_a="$1"
    typeset _filename_b="$2"
    if prex "cmp $_filename_a $_filename_b" ; then # 1>/dev/null 2>&1 ; then
        echo ".... OK, $_filename_a and $_filename_b are equal"
    else
        die "file $_filename_a is NOT equal to $_filename_b: $(cmp $_filename_a $_filename_b)"
    fi
}

## setup
echo "== TEMPDIR=$TEMPDIR"

mkdir -p $TEMPDIR

prex "rm -rf ${TEMPDIR:-undefined}/*"
cd $TEMPDIR

## creating
typeset -i X=8
typeset -i Y=10
typeset -i H=30
typeset -i bytes_float16=2
typeset -i bytes_float32=4
typeset -i bytes_float64=8
prex "cubist ${CUBIST_OPTIONS} -o a_{shape}.{format} -e 'cnp.linear_cube(($X, $Y))'"
check_file_exists_and_has_size a_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -o a_{shape}.{format} -e 'cnp.linear_cube(($X, $Y))' -Of text"
check_file_exists a_${X}x${Y}.text
prex "cubist ${CUBIST_OPTIONS} -i a_{shape}.{format} -s "${X}x${Y}" -o tmp_{shape}.text2{format} -If text -Of raw"
check_file_exists tmp_${X}x${Y}.text2raw
check_files_are_equal a_${X}x${Y}.raw tmp_${X}x${Y}.text2raw

prex "cubist ${CUBIST_OPTIONS} -o a_{shape}.{format} -e 'cnp.linear_cube(($X, $Y))' -Of csv"
check_file_exists a_${X}x${Y}.csv
prex "cubist ${CUBIST_OPTIONS} -i a_{shape}.{format} -s "${X}x${Y}" -o tmp_{shape}.csv2{format} -If csv -Of raw"
check_file_exists tmp_${X}x${Y}.csv2raw
check_files_are_equal a_${X}x${Y}.raw tmp_${X}x${Y}.csv2raw

prex "cubist ${CUBIST_OPTIONS} -o b_{shape}.{format} -e 'cnp.linear_cube((${X}, ${Y}))'"
check_file_exists_and_has_size a_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -o c_{shape}.{format} -e 'cnp.linear_cube((${X}, ${Y}))'"
check_file_exists_and_has_size a_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -o l_{shape}.{format} -e 'cnp.linear_cube((${X}, ${Y}))'"
check_file_exists_and_has_size a_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -o a_{shape}.{format} -e 'cnp.linear_cube((${X}, ${H}, ${Y}))'"
check_file_exists_and_has_size a_${X}x${H}x${Y}.raw $(( $X * $H * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -o f_{shape}.{dtype}.{format} -t float16 -e 'cnp.linear_cube((8, 10))'"
check_file_exists_and_has_size f_${X}x${Y}.float16.raw $(( $X * $Y * ${bytes_float16} ))

prex "cubist ${CUBIST_OPTIONS} -o g_{shape}.{dtype}.{format} -t float64 -e 'cnp.linear_cube((8, 10))'"
check_file_exists_and_has_size g_${X}x${Y}.float64.raw $(( $X * $Y * ${bytes_float64} ))

## checks
prex "cubist ${CUBIST_OPTIONS} -i a_{shape}.{format} -i b_{shape}.{format} -s 8x10 -o u_{shape}.{format} -e 'i0 - i1'"
check_file_exists_and_has_size u_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -i a_{shape}.{format} -s 8x30x10 -x :x5x: -o tmp_{shape}.{format}"
check_file_exists_and_has_size tmp_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

## --- different shapes ---
prex "cubist ${CUBIST_OPTIONS} -i tmp_{shape}.{format} -i a_{shape}.{format} -s 8x10 -e 'i0 - i1' -o out0_{shape}.{format}"
check_file_exists_and_has_size out0_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -i a_{shape}.{format} -s 8x30x10 -i a_{shape}.{format} -s 8x10 -e 'i0[:, 5, :] - i1' -o out1_{shape}.{format}"
check_file_exists_and_has_size out1_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))
check_files_are_equal out0_${X}x${Y}.raw out1_${X}x${Y}.raw

prex "cubist ${CUBIST_OPTIONS} -i a_{shape}.{format} -s 8x30x10 -x i0=:x5x: -i a_{shape}.{format} -s 8x10 -e 'i0 - i1' -o out2_{shape}.{format}"
check_file_exists_and_has_size out2_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))
check_files_are_equal out0_${X}x${Y}.raw out2_${X}x${Y}.raw

## --- different dtypes ---
prex "cubist ${CUBIST_OPTIONS} -i f_{shape}.{dtype}.{format} -It float16 -o tmp_f_{shape}.{dtype}.{format} -Ot float64 -s 8x10"
check_file_exists_and_has_size tmp_f_${X}x${Y}.float64.raw $(( $X * $Y * ${bytes_float64} ))

prex "cubist ${CUBIST_OPTIONS} -i g_{shape}.{dtype}.{format} -i tmp_f_{shape}.{dtype}.{format} -t float64 -o out0_{shape}.{dtype}.{format} -s 8x10 -e 'i0 - i1'"
check_file_exists_and_has_size out0_${X}x${Y}.float64.raw $(( $X * $Y * ${bytes_float64} ))

prex "cubist ${CUBIST_OPTIONS} -i g_{shape}.{dtype}.{format} -It float64 -i f_{shape}.{dtype}.{format} -It float16 -s 8x10 -o out1_{shape}.{dtype}.{format} -e 'i0 - i1' -Ot float64"
check_file_exists_and_has_size out1_${X}x${Y}.float64.raw $(( $X * $Y * ${bytes_float64} ))
check_files_are_equal out0_${X}x${Y}.float64.raw out1_${X}x${Y}.float64.raw

## --- user defined variables ---
prex "cubist ${CUBIST_OPTIONS} -i a=a_{shape}.{format} -i b=b_{shape}.{format} -s 8x10 -o r0_{shape}.{format} -V f_a=10.0 -V f_b=-5.0 -e 'f_a * a + f_b * b'"
check_file_exists_and_has_size r0_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))

prex "cubist ${CUBIST_OPTIONS} -i a=a_{shape}.{format} -i b=b_{shape}.{format} -s 8x10 -o r1_{shape}.{format} -V c='10.0 * a' -V d='-5.0 * b' -e 'c + d'"
check_file_exists_and_has_size r1_${X}x${Y}.raw $(( $X * $Y * ${bytes_float32} ))
check_files_are_equal r0_${X}x${Y}.raw r1_${X}x${Y}.raw

## --- cubist_numpy ---
typeset -i _x=$(( $X - 2 ))

# raw
prex "cubist -e 'cnp.fromfile_raw(\"a_8x10.raw\", dtype=np.float32, shape=\"8x10\", selection=\"2:x4\")' -o out10_{shape}.{format}"
check_file_exists_and_has_size out10_${_x}.raw $(( $_x * ${bytes_float32} ))

prex "cubist -e 'np.fromfile(\"a_8x10.raw\", dtype=np.float32).reshape((8,10))[2:, 4]' -o out11_{shape}.{format}"
check_file_exists_and_has_size out11_${_x}.raw $(( $_x * ${bytes_float32} ))
check_files_are_equal out10_${_x}.raw out11_${_x}.raw

# csv
prex "cubist -e 'cnp.fromfile_csv(\"a_8x10.csv\", dtype=np.float32, shape=\"8x10\", selection=\"2:x4\")' -o out20_{shape}.{format}"
check_file_exists_and_has_size out20_${_x}.raw $(( $_x * ${bytes_float32} ))

prex "cubist -e 'np.fromfile(\"a_8x10.csv\", dtype=np.float32, sep=\",\").reshape((8,10))[2:, 4]' -o out21_{shape}.{format}"
check_file_exists_and_has_size out21_${_x}.raw $(( $_x * ${bytes_float32} ))
check_files_are_equal out20_${_x}.raw out21_${_x}.raw

# text
prex "cubist -e 'cnp.fromfile_text(\"a_8x10.text\", dtype=np.float32, shape=\"8x10\", selection=\"2:x4\")' -o out30_{shape}.{format}"
check_file_exists_and_has_size out30_${_x}.raw $(( $_x * ${bytes_float32} ))

prex "cubist -e 'np.loadtxt(\"a_8x10.text\", dtype=np.float32).reshape((8,10))[2:, 4]' -o out31_{shape}.{format}"
check_file_exists_and_has_size out31_${_x}.raw $(( $_x * ${bytes_float32} ))
check_files_are_equal out30_${_x}.raw out31_${_x}.raw
